<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Mika&#39;s Blog</title>
        <link>https://blog.mikadesu.uk/</link>
        <description>Recent content on Mika&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Mika</copyright>
        <lastBuildDate>Thu, 26 Dec 2024 12:48:08 +0800</lastBuildDate><atom:link href="https://blog.mikadesu.uk/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Sub-Store基础用法</title>
        <link>https://blog.mikadesu.uk/p/sub-store%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link>
        <pubDate>Thu, 26 Dec 2024 12:48:08 +0800</pubDate>
        
        <guid>https://blog.mikadesu.uk/p/sub-store%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid>
        <description>&lt;p&gt;上回我们讲到怎么配置sub-store服务端，今天我们来讲讲sub-store的基础用法：导入我们的自定义节点，生成一个全平台通用的sing-box订阅文件&lt;/p&gt;
&lt;p&gt;sing-box是一个全平台通用的代理软件，支持目前市面上几乎所有的主流协议，如果你的目的仅仅是翻墙，那么使用它已完全足够&lt;/p&gt;
&lt;p&gt;首先我们登录到上回搭建的sub-store后台：https://yourdomain.example.com&lt;/p&gt;
&lt;p&gt;点击右上角的“+”号，选择单条订阅（这里有一个123是因为我已经生成过了订阅文件，新建的是空的）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.mikadesu.uk/Snipaste_2024-12-26_12-59-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sub-store-1&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;带星号的是必填项，随便填一个名字，然后选择“本地订阅”，导入你自建的节点URI或者JSON（可以从小火箭、V2RAYNG这样的软件中导出），每行一个&lt;/p&gt;
&lt;p&gt;如果你是机场用户，可以选择“远程链接”导入你的机场订阅节点，其他步骤是一样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.mikadesu.uk/Snipaste_2024-12-26_13-01-33.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sub-store-2&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;填完后保存，这样我们节点就导入好了，接下来我们来导入sing-box配置文件&lt;/p&gt;
&lt;p&gt;底栏点击第二个图标，进入文件管理（这里有两个test文件是因为我已经创建过了，新建的是空的）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.mikadesu.uk/Snipaste_2024-12-26_13-09-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sub-store-3&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;填一个名字，来源选择远程，这里推荐亚托利佬的配置文件，填入&lt;code&gt;https://raw.githubusercontent.com/xishang0128/sub-store-template/main/sing-box.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.mikadesu.uk/Snipaste_2024-12-26_13-10-59.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sub-store-4&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;拉到下面来到脚本操作，在添加一个操作下面点击“脚本操作”，选择链接，填入&lt;code&gt;https://raw.githubusercontent.com/xream/scripts/main/surge/modules/sub-store-scripts/sing-box/template.js#name=123&amp;amp;outbound=🕳ℹ️all|all-auto🕳ℹ️hk|hk-auto🏷ℹ️港|hk|hongkong|kong kong|🇭🇰🕳ℹ️tw|tw-auto🏷ℹ️台|tw|taiwan|🇹🇼🕳ℹ️jp|jp-auto🏷ℹ️日本|jp|japan|🇯🇵🕳ℹ️sg|sg-auto🏷ℹ️^(?!.*(?:us)).*(新|sg|singapore|🇸🇬)🕳ℹ️us|us-auto🏷ℹ️美|us|unitedstates|united states|🇺🇸&lt;/code&gt; （这里要把name参数的值改成你的节点订阅的名字，比如我之前建立的123&lt;/p&gt;
&lt;p&gt;（懒得截图了）&lt;/p&gt;
&lt;p&gt;最后保存，回到文件管理界面，点击文件旁边的第二个图标复制，然后就可以到sing-box里导入你的专属订阅链接了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.mikadesu.uk/Snipaste_2024-12-26_13-15-14.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sub-store-5&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用docker-compose和caddy建立sub-store实例</title>
        <link>https://blog.mikadesu.uk/p/%E4%BD%BF%E7%94%A8docker-compose%E5%92%8Ccaddy%E5%BB%BA%E7%AB%8Bsub-store%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Mon, 23 Dec 2024 13:31:45 +0800</pubDate>
        
        <guid>https://blog.mikadesu.uk/p/%E4%BD%BF%E7%94%A8docker-compose%E5%92%8Ccaddy%E5%BB%BA%E7%AB%8Bsub-store%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;p&gt;Sub-Store是一个功能强大的订阅管理器，可以一次性管理多个自建节点和机场订阅，生成配置文件，以下是Sub-Store的后端部署过程&lt;/p&gt;
&lt;p&gt;首先你需要一台服务器，并且将域名指向这个服务器的IP，这里省略过程&lt;/p&gt;
&lt;p&gt;登录服务器，安装docker和docker compose&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget -qO- https://get.docker.com | sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果是国内的机器，请使用以下命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget -qO- https://get.docker.com | sh --mirror Aliyun&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;pwgen -s 20&lt;/code&gt; 生成随机路径，如果没有pwgen请先通过 &lt;code&gt;apt install pwgen&lt;/code&gt; 安装，以下以生成的随机路径 &lt;code&gt;MHxrd3DfOBGU319E5C53&lt;/code&gt; 为例&lt;/p&gt;
&lt;p&gt;新建文件夹sub-store &lt;code&gt;mkdir sub-store &amp;amp;&amp;amp; cd sub-store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行 &lt;code&gt;nano docker-compose.yml&lt;/code&gt; 创建compose文件，填入以下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;services:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  caddy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    image: caddy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    container_name: caddy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    restart: unless-stopped
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ports:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - &amp;#34;443:443&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - ./conf:/etc/caddy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - caddy_data:/data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - caddy_config:/config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  sub-store:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    image: xream/sub-store
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    container_name: sub-store
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    restart: unless-stopped
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       - ./data:/opt/app/data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    environment:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      SUB_STORE_FRONTEND_BACKEND_PATH: &amp;#34;/MHxrd3DfOBGU319E5C53&amp;#34; # 这里改成你自己的随机路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      SUB_STORE_CRON: &amp;#34;55 23 * * *&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  caddy_data:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  caddy_config:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ctrl + X 保存&lt;/p&gt;
&lt;p&gt;生成存放caddy配置的文件夹，创建Caddyfile&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir conf &amp;amp;&amp;amp; cd conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano Caddyfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将以下内容填入Caddyfile&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yourdomain.example.com { # 这里改成你的域名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  reverse_proxy http://sub-store:3001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ctrl + X 保存，然后回到上层目录 &lt;code&gt;cd ..&lt;/code&gt; ，运行 &lt;code&gt;docker compose up -d&lt;/code&gt; 拉起容器&lt;/p&gt;
&lt;p&gt;稍等一会等caddy生成证书后，通过 &lt;a class=&#34;link&#34; href=&#34;https://yourdomain.example.com?api=https://yourdomain.example.com/MHxrd3DfOBGU319E5C53&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://yourdomain.example.com?api=https://yourdomain.example.com/MHxrd3DfOBGU319E5C53&lt;/a&gt; 登录sub-store后台&lt;/p&gt;
&lt;p&gt;首次登录需要输入完整地址，后续可以直接通过 &lt;a class=&#34;link&#34; href=&#34;https://yourdomain.example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://yourdomain.example.com&lt;/a&gt; 登录&lt;/p&gt;
&lt;p&gt;点击底栏的设置图标，打开后端设置，名称随意，输入后端地址：https://yourdomain.example.com/MHxrd3DfOBGU319E5C53&lt;/p&gt;
&lt;p&gt;保存，将默认后端改成你新建的后端地址&lt;/p&gt;
&lt;p&gt;至此sub-store服务端部署完成&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
